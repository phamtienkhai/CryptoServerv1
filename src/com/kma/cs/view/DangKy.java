/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kma.cs.view;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JOptionPane;

import com.kma.cs.model.DatabaseCRUD;
import com.kma.cs.model.User;
import com.kma.cs.utils.HashUtil;
import com.kma.cs.utils.mail.SendMail;
import com.kma.cs.utils.otp.OTPService;
import java.awt.Font;

/**
 *
 * @author ptkat
 */
public class DangKy extends javax.swing.JFrame {

	/**
	 * Creates new form DangNhap
	 */

	private static String userName;
	private static String password;
	private static String mail;
	private static String otpCode;
	private static OTPService service;// = new OTPService();

	public DangKy() {
		initComponents();
		this.setLocation(400, 150);
		Font font = new Font("SansSerif", Font.PLAIN, 25);
        jTextField_Mail.setFont(font);
        jTextField_UserName.setFont(font);
        jTextField_OTP.setFont(font);
        jPasswordField_Password.setFont(font);
        jLabel_Mail.setFont(font);
        jLabel_OTP.setFont(font);
        jLabel_Password.setFont(font);
        jLabel_UserName.setFont(font);
        jButton_OTP.setFont(font);
        jButton_Register.setFont(font);
        this.setTitle("Register");
//		this.setSize(1000, 500);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jTextField_OTP = new javax.swing.JTextField();
		jTextField_UserName = new javax.swing.JTextField();
		jLabel_Mail = new javax.swing.JLabel();
		jLabel_Password = new javax.swing.JLabel();
		jLabel_UserName = new javax.swing.JLabel();
		jPasswordField_Password = new javax.swing.JPasswordField();
		jTextField_Mail = new javax.swing.JTextField();
		jLabel_OTP = new javax.swing.JLabel();
		jButton_Register = new javax.swing.JButton();
		jButton_OTP = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jTextField_UserName.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTextField_UserNameActionPerformed(evt);
			}
		});

		jLabel_Mail.setText("Mail");

		jLabel_Password.setText("Password");

		jLabel_UserName.setText("UserName");

		jLabel_OTP.setText("OTP");

		jButton_Register.setText("Register");
		jButton_Register.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton_RegisterActionPerformed(evt);
			}
		});

		jButton_OTP.setText("OTP");
		jButton_OTP.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton_OTPActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(118, 118, 118)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
						.addComponent(jLabel_Mail, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel_UserName, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
						.addComponent(jLabel_Password, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addComponent(jLabel_OTP, javax.swing.GroupLayout.PREFERRED_SIZE, 140,
								javax.swing.GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addComponent(jButton_OTP, javax.swing.GroupLayout.PREFERRED_SIZE, 142,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(51, 51, 51)
								.addComponent(
										jButton_Register, javax.swing.GroupLayout.PREFERRED_SIZE, 142,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGroup(layout.createSequentialGroup().addGroup(layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(jTextField_UserName, javax.swing.GroupLayout.PREFERRED_SIZE, 554,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jTextField_OTP, javax.swing.GroupLayout.PREFERRED_SIZE, 554,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addComponent(jPasswordField_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 554,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jTextField_Mail, javax.swing.GroupLayout.PREFERRED_SIZE, 554,
										javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(0, 283, Short.MAX_VALUE)))));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap(114, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel_UserName, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jTextField_UserName, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(27, 27, 27)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jPasswordField_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 42,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 42,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jTextField_Mail, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel_Mail, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(31, 31, 31)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jTextField_OTP, javax.swing.GroupLayout.PREFERRED_SIZE, 47,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel_OTP, javax.swing.GroupLayout.PREFERRED_SIZE, 42,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jButton_OTP, javax.swing.GroupLayout.PREFERRED_SIZE, 56,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButton_Register, javax.swing.GroupLayout.PREFERRED_SIZE, 56,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(126, 126, 126)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jTextField_UserNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextField_UserNameActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jTextField_UserNameActionPerformed

	private void jButton_OTPActionPerformed(java.awt.event.ActionEvent evt) {
		userName = jTextField_UserName.getText().toString().trim();
//    	password = jPasswordField_Password.getSelectedText().toString().trim();
		password = new String(jPasswordField_Password.getPassword()).toString().trim();
		mail = jTextField_Mail.getText().toString().trim();
		String fromMail, passwordFromMail, toMail, codeOTP;
//		OTPService service = new OTPService();
		service = new OTPService();
		codeOTP = service.generatorCode();
		fromMail = "chusau7mau@gmail.com";
		passwordFromMail = "chusau7maua@A123z!";
//		toMail = "khaihackerqsc@gmail.com";
		toMail = mail;
		SendMail sendMail = new SendMail();
		sendMail.send(fromMail, passwordFromMail, toMail, codeOTP);
		JOptionPane.showMessageDialog(this, "Vui lòng nhập mã OTP");
	}

	private void jButton_RegisterActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			otpCode = jTextField_OTP.getText().toString().trim();
//    		System.out.println(otpCode.length());
//    		System.out.println("otpCode:"+otpCode);
			boolean check = service.verify(otpCode);
			System.out.println("check:" + check);
//            JButton jButton = new JButton();
			if (!check) {
				JOptionPane.showMessageDialog(this, "Xác thực không thành công");
			} else if (check) {
				String sqlSelect = "SELECT * FROM user";
				List list = DatabaseCRUD.getTable(sqlSelect, "user");
				List<Integer> listUserId = new ArrayList<Integer>();
				if (list != null) {
					if (list.size() >= 0) {
						check = false;
						for (Object object : list) {
							User user = (User) object;
							listUserId.add(Integer.parseInt(user.getUserId()));
							if (user.getUserName().equalsIgnoreCase(userName))
								check = true;
						}
						if (check) {
							JOptionPane.showMessageDialog(this, "UserName đã tồn tại");
						} else if (!check) {
							String sql = "INSERT INTO user VALUES (?, ?, ?, ?)";
							String userId = "-1";
							int max = 0;
							for (int a : listUserId) {
								if (max < a)
									max = a;
							}
							userId = (listUserId.get(listUserId.size() - 1) + 1) + "";
//            				userId = (Integer.parseInt(userId) + 1) + "";
							userId = (max + 1) + "";
//            				S
//            				if()
							System.out.println("userId:" + userId);
//            				System.exit(0);
							password = HashUtil.hash(password);
							check = DatabaseCRUD.createTable(sql, userName, password, mail, userId);
							if (check) {
								JOptionPane.showMessageDialog(this, "Thành công");
								DangNhap dangNhap = new DangNhap();
								dangNhap.setVisible(true);
								this.setVisible(false);
							} else if (!check) {
								JOptionPane.showMessageDialog(this, "Xảy ra lỗi");
							}
						}

					}
				} else {
					JOptionPane.showMessageDialog(this, "Lỗi khi kết nốt tới cơ sở dữ liệu");
				}

			}

		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Lỗi không xác định");
		}

	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(DangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(DangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(DangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(DangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new DangKy().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton_OTP;
	private javax.swing.JButton jButton_Register;
	private javax.swing.JLabel jLabel_Mail;
	private javax.swing.JLabel jLabel_OTP;
	private javax.swing.JLabel jLabel_Password;
	private javax.swing.JLabel jLabel_UserName;
	private javax.swing.JPasswordField jPasswordField_Password;
	private javax.swing.JTextField jTextField_Mail;
	private javax.swing.JTextField jTextField_OTP;
	private javax.swing.JTextField jTextField_UserName;
	// End of variables declaration//GEN-END:variables
}
